#######################################################
# 
# MeasurementValue.py
# Python implementation of the Class MeasurementValue
# Generated by Enterprise Architect
# Created on:      17-Dec-2023 7:08:03 PM
# 
#######################################################
from CIM_STD_PYTHON.TC57CIM.IEC61970.Base.Domain.PerCent import PerCent
from CIM_STD_PYTHON.TC57CIM.IEC61970.Base.Domain.DateTime import DateTime
from CIM_STD_PYTHON.TC57CIM.IEC61970.Base.SCADA.RemoteSource import RemoteSource
from CIM_STD_PYTHON.TC57CIM.IEC61970.Base.Meas.IOPoint import IOPoint
from CIM_STD_PYTHON.TC57CIM.IEC61970.InfIEC61970.SCADA_EMS.Meas.MeasurementValueExt import MeasurementValueExt
from CIM_STD_PYTHON.TC57CIM.IEC61970.Base.Meas.MeasurementValueQuality import MeasurementValueQuality

class MeasurementValue(IOPoint, MeasurementValueExt):
    """
    The current state for a measurement. A state value is an instance of a
    measurement from a specific source. Measurements can be associated with many
    state values, each representing a different source for the measurement.
    """

    def __init__(self):
        super().__init__()
        self.sensor_accuracy: PerCent
        # The limit, expressed as a percentage of the sensor maximum, that errors will
        # not exceed when the sensor is used under  reference conditions.
        self.timestamp: DateTime = DateTime()
        # The time when the value was last updated
        self.remote_source: RemoteSource = RemoteSource()
        # Link to the physical telemetered point associated with this measurement.
        self.measurement_value_quality: MeasurementValueQuality = MeasurementValueQuality()
        # A MeasurementValue has a MeasurementValueQuality associated with it.
